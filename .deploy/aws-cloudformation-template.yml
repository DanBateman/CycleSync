AWSTemplateFormatVersion: 2010-09-09
Resources:
  AppNetwork:
    Properties:
      GroupDescription: deploy Security Group for app network
      Tags:
      - Key: com.docker.compose.project
        Value: deploy
      - Key: com.docker.compose.network
        Value: deploy_app
      VpcId: vpc-810162fb
    Type: AWS::EC2::SecurityGroup
  AppNetworkIngress:
    Properties:
      Description: Allow communication within network app
      GroupId:
        Ref: AppNetwork
      IpProtocol: "-1"
      SourceSecurityGroupId:
        Ref: AppNetwork
    Type: AWS::EC2::SecurityGroupIngress
  ClientService:
    Properties:
      Cluster:
        Fn::GetAtt:
        - Cluster
        - Arn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - Ref: AppNetwork
          Subnets:
          - subnet-e00c97de
          - subnet-cdb9e991
          - subnet-ef451288
          - subnet-078bd929
          - subnet-99c9c096
          - subnet-3b36d176
      PlatformVersion: 1.4.0
      PropagateTags: SERVICE
      SchedulingStrategy: REPLICA
      ServiceRegistries:
      - RegistryArn:
          Fn::GetAtt:
          - ClientServiceDiscoveryEntry
          - Arn
      Tags:
      - Key: com.docker.compose.project
        Value: deploy
      - Key: com.docker.compose.service
        Value: client
      TaskDefinition:
        Ref: ClientTaskDefinition
    Type: AWS::ECS::Service
  ClientServiceDiscoveryEntry:
    Properties:
      Description: '"client" service discovery entry in Cloud Map'
      DnsConfig:
        DnsRecords:
        - TTL: 60
          Type: A
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: client
      NamespaceId:
        Ref: CloudMap
    Type: AWS::ServiceDiscovery::Service
  ClientTaskDefinition:
    Properties:
      ContainerDefinitions:
      - Command:
        - us-east-1.compute.internal
        - deploy.local
        Essential: false
        Image: docker/ecs-searchdomain-sidecar:1.0
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: deploy
        Name: Client_ResolvConf_InitContainer
      - DependsOn:
        - Condition: SUCCESS
          ContainerName: Client_ResolvConf_InitContainer
        Essential: true
        Image: 783533502506.dkr.ecr.us-east-1.amazonaws.com/db-cycle-sync:latest-client@sha256:57b317205354323538d441c0fbe84c61404b106855e7933d23902868150d4f24
        LinuxParameters: {}
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: deploy
        Name: client
      Cpu: "256"
      ExecutionRoleArn:
        Ref: ClientTaskExecutionRole
      Family: deploy-client
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
    Type: AWS::ECS::TaskDefinition
  ClientTaskExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Condition: {}
          Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
      - Key: com.docker.compose.project
        Value: deploy
      - Key: com.docker.compose.service
        Value: client
    Type: AWS::IAM::Role
  CloudMap:
    Properties:
      Description: Service Map for Docker Compose project deploy
      Name: deploy.local
      Vpc: vpc-810162fb
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
  Cluster:
    Properties:
      ClusterName: deploy
      Tags:
      - Key: com.docker.compose.project
        Value: deploy
    Type: AWS::ECS::Cluster
  LogGroup:
    Properties:
      LogGroupName: /docker-compose/deploy
    Type: AWS::Logs::LogGroup